import{_ as i,c as a,o as e,ae as t}from"./chunks/framework.ChhGBEr5.js";const g=JSON.parse('{"title":"git手册","description":"","frontmatter":{"title":"git手册","date":"2024-10-08T14:20:10.000Z","tags":null,"categories":null},"headers":[],"relativePath":"笔记/Old/git手册.md","filePath":"笔记/Old/git手册.md","lastUpdated":1743185048000}'),l={name:"笔记/Old/git手册.md"};function n(p,s,h,d,k,o){return e(),a("div",null,s[0]||(s[0]=[t(`<p>结合他人blog或视频以及自己平时使用git的一些经验写成的一篇实用向git手册。</p><p>参考视频：<a href="https://www.bilibili.com/video/BV1Sp421o7U4" target="_blank" rel="noreferrer">十分钟速通git核心指令</a></p><blockquote><p>博主分支部分有些错误，在本文已修正。</p></blockquote><p>基础环境配置参见：<a href="https://dingdingqiuqiu.github.io/2023/11/10/Arch%E9%85%8D%E7%BD%AEGit%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81/#more" target="_blank" rel="noreferrer">Arch配置Git自动登录验证</a></p><h3 id="拉取远程仓库并合并" tabindex="-1">拉取远程仓库并合并 <a class="header-anchor" href="#拉取远程仓库并合并" aria-label="Permalink to &quot;拉取远程仓库并合并&quot;">​</a></h3><blockquote><p>git fetch,git merge,git pull</p></blockquote><p><code>git fetch</code>命令拉取远程仓库最新代码，<code>git merge</code>执行合并。<code>git pull</code>拉取并自动合并。注意，<code>git merge</code>时可能会有<code>merge conflict</code>。为了避免合并时的冲突，可以先<code>git fetch</code>再<code>git merge</code>合并，这样根据IDE的报错修改特定冲突部分。</p><h3 id="状态查询" tabindex="-1">状态查询 <a class="header-anchor" href="#状态查询" aria-label="Permalink to &quot;状态查询&quot;">​</a></h3><blockquote><p>git log,git status</p></blockquote><p><code>git log</code>用来查看所有提交，<code>git status</code>用来查看本地文件夹的状态，<code>git diff</code>用来对比不同分支/提交的文件差异。</p><h3 id="分支" tabindex="-1">分支 <a class="header-anchor" href="#分支" aria-label="Permalink to &quot;分支&quot;">​</a></h3><blockquote><p>git branch</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new_branch</span></span></code></pre></div><p>通过以上命令在本地新建分支<code>new_branch</code>，该分支中文件在当前分支的基础上进行，同时自动进入<code>new_branch</code>分支。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vv</span></span></code></pre></div><p>查看本地所有branch以及其与远程branch的绑定</p><p>进行一定开发后add,commit.........然后：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new_branch</span></span></code></pre></div><p>将本地<code>new_branch</code>分支推送到远程<code>new_branch</code>，此时在远程新建了<code>new_branch</code>分支，并使用<code>-u</code>参数记住了该本地分支下次<code>git push/git pull</code>时需要推送/拉取的远程分支。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> switch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div><p>本地切换到main分支。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fetch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new_branch</span></span></code></pre></div><p>拉取远程的<code>new_branch</code>分支。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin/new_branch</span></span></code></pre></div><p>合并本地<code>main</code>分支和远程<code>new_branch</code>分支</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span></span></code></pre></div><p>将本地<code>main</code>分支的修改推送到远程仓库</p><h3 id="解决冲突" tabindex="-1">解决冲突 <a class="header-anchor" href="#解决冲突" aria-label="Permalink to &quot;解决冲突&quot;">​</a></h3><blockquote><p>git的文件冲突解决方式比较智能，有时会因为错误的合并策略导致再次合并时不能重新合并，这是因为已经检测到合并过了，此时对要并入的文件略微添加注释即可重新合并。这是因为合并时会根据文件内容，合并历史，文件历史综合考虑合并策略。</p></blockquote><p>合并时提示有冲突可以使用<code>mergetool</code>解决冲突。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git mergetool filename</span></span></code></pre></div><blockquote><p>若不加文件名，自动打开冲突文件</p></blockquote><img src="https://1drv.ms/i/s!Ai4kpDYGStT7m1XYiq30zod2xxZG?embed=1&amp;width=1274&amp;height=817" width="1274" height=" "><p>vimdiff使用</p><p>配置：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge.tool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vimdiff</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge.conflictstyle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> diff3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mergetool.prompt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#让git mergetool不再生成备份文件(*.orig)  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mergetool.keepBackup</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span></code></pre></div><p>键入以下命令启动</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git mergetool</span></span></code></pre></div><p>上面三个窗口分别是本地文件(LOCAL)，共同上游（BASE），远程文件(REMOTE)。下面的窗口为MERGED窗口(即合并后的窗口/有冲突的窗口)</p><img src="https://1drv.ms/i/s!Ai4kpDYGStT7m1bYiq30zod2xxZG?embed=1&amp;width=1920&amp;height=1032" width="1920" height=" "><p>光标标移动到MERGED窗口，以下命令可以获取上面窗口的内容(也可根据个人需求自行修改MERGED窗口内容)</p><div class="language-SHELL vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">SHELL</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:diffget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> REMOTE</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 获取REMOTE的修改到MERGED文件, 忽略大小写</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:diffg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> REMOTE</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 获取REMOTE的修改到MERGED文件, 忽略大小写</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:diffg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BASE</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # get from base</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:diffg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LOCAL</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # get from local</span></span></code></pre></div><img src="https://1drv.ms/i/s!Ai4kpDYGStT7m1fYiq30zod2xxZG?embed=1&amp;width=1920&amp;height=1032" width="1920" height=" "><p>上面这张图片键入命令无效，要求有一条白线(没有白线可以换成输入模式输入点内容自动白线)，如下：</p><img src="https://1drv.ms/i/s!Ai4kpDYGStT7m1jYiq30zod2xxZG?embed=1&amp;width=1920&amp;height=1032" width="1920" height=" "><p>还有一些其他命令</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]c      # nect difference</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[c      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># previous difference</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">zo      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># open folded text</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">zc      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># close folded text</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">zr      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># open all folds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">zm      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># close all folds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:diffupdate     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># re-scan the file for difference</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # diff obtain</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dp      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># diff put</span></span></code></pre></div><p>解决冲突完成后<code>git comit</code>提交即可。</p><h3 id="fork" tabindex="-1">fork <a class="header-anchor" href="#fork" aria-label="Permalink to &quot;fork&quot;">​</a></h3><blockquote><p>项目复制</p></blockquote><p>在<code>github</code>上<code>fork</code>别人的远程仓库之后，相当于你自己新建了一个自己的远程仓库，只不过内容都是别人的远程仓库里的内容。你可以对自己<code>fork</code>到的仓库进行任意操作。例如，<code>git clone</code>到本地后，进行若干修改/提交，<code>git push</code>到的远程仓库为你的远程仓库。如果想让代码合并到原作者的远程仓库，需要向原作者申请<code>Pull requests</code>，原作者同意后即可合并到原作者的远程仓库。这即为开源项目的贡献流程。</p>`,51)]))}const r=i(l,[["render",n]]);export{g as __pageData,r as default};
