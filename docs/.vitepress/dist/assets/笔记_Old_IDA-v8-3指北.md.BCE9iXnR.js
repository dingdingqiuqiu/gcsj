import{_ as i,c as a,o as n,ae as h}from"./chunks/framework.ChhGBEr5.js";const o=JSON.parse('{"title":"IDA_v8.3指北","description":"","frontmatter":{"title":"IDA_v8.3指北","date":"2023-12-09T12:39:14.000Z","tags":["IDA"],"categories":["Reserve","Tools","IDA"]},"headers":[],"relativePath":"笔记/Old/IDA-v8-3指北.md","filePath":"笔记/Old/IDA-v8-3指北.md","lastUpdated":1743185048000}'),p={name:"笔记/Old/IDA-v8-3指北.md"};function t(k,s,l,e,d,r){return n(),a("div",null,s[0]||(s[0]=[h(`<p>本文基于IDA_Pro_8.3版本，记录使用过程中的一些问题，以及一些关于IDA的基本操作</p><h2 id="ida配置" tabindex="-1">IDA配置 <a class="header-anchor" href="#ida配置" aria-label="Permalink to &quot;IDA配置&quot;">​</a></h2><h3 id="下载" tabindex="-1">下载 <a class="header-anchor" href="#下载" aria-label="Permalink to &quot;下载&quot;">​</a></h3><p><a href="https://od.cloudsploit.top/zh-CN/tools/IDA/8.3" target="_blank" rel="noreferrer">IDA_Pro_v8.3</a></p><blockquote><p>IDA Pro 8.3(x86，x86_64)<em>BGSPA.zip：这是一个压缩包，里面包含了IDA Pro 8.3的安装文件和一些插件和工具。</em></p><p>IDA Pro 8.3_(x86_x64_ARM_ARM64_PPC_PPC64_MIPS)_P.Y.G_Team.zip：这也是一个压缩包，里面包含了IDA Pro 8.3的安装文件和一些插件和工具，但是支持不同的处理器架构。</p><p>IDA SDK and Tools.7z：这是一个压缩包，里面包含了IDA Pro的开发工具包（SDK），可以用来创建自己的插件和加载器。</p><p>ida_keygen.exe：这是一个程序，可以用来生成IDA Pro的密钥文件（ida.key），需要输入用户名和邮箱地址。</p><p>IDA_Pro_8.3-incl_kg-HexRaysDec-SDK-READ_NFO-BGSPA：这是一个压缩包，里面包含了IDA Pro 8.3的安装文件、HexRaysDec插件、SDK、README.txt和BGSPA密钥文件。HexRaysDec插件可以用来解密一些使用Hex-Rays加密技术的二进制文件。README.txt说明了如何使用这个密钥文件。BGSPA密钥文件是由BGSPA团队提供的，他们开发了一些游戏相关的反汇编工具。</p></blockquote><h3 id="key生成与配置" tabindex="-1">Key生成与配置 <a class="header-anchor" href="#key生成与配置" aria-label="Permalink to &quot;Key生成与配置&quot;">​</a></h3><p>这里利用网盘中下载下来的<code>ida_keygen.exe</code>程序，<code>win+r</code>输入<code>cmd</code>,进入<code>ida_keygen.exe</code>所在的文件目录，运行以下命令，生成<code>ida.key</code>文件，将<code>ida.key</code>移动到<code>IDA_Pro_v8.3</code>本体所在文件夹即可。</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ida_keygen.exe </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">v </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">830</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">u 用户名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e 编一个邮箱 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5169</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ida.key</span></span></code></pre></div><img src="https://onedrive.live.com/embed?resid=FBD44A0636A4242E%212830&amp;authkey=%21ANiKrfTOh3bHFkY&amp;width=1890&amp;height=982" width="1890" height=" "><h3 id="快速启动" tabindex="-1">快速启动 <a class="header-anchor" href="#快速启动" aria-label="Permalink to &quot;快速启动&quot;">​</a></h3><p>可以将IDA所在的文件路径加入环境变量<code>Path</code>。</p><img src="https://onedrive.live.com/embed?resid=FBD44A0636A4242E%212832&amp;authkey=%21ANiKrfTOh3bHFkY&amp;width=729&amp;height=208" width="729" height=" "><p>将本体路径<code>D:\\1Reserve\\IDA_Pro_v8.3\\IDA Pro 8.3 (x86, x86_64)_BGSPA\\IDA Pro 8.3 (x86, x86_64)</code>加入到<code>Path</code>即可。（双击<code>Path</code>即可编辑值），<strong>不要</strong>点新建，变量名和原<code>Path</code>相同会将原<code>Path</code>覆盖。此后，在<code>cmd</code>里直接输入<code>ida</code>或<code>ida64</code>即可打开软件。</p><h2 id="ida-debug" tabindex="-1">IDA-Debug <a class="header-anchor" href="#ida-debug" aria-label="Permalink to &quot;IDA-Debug&quot;">​</a></h2><h3 id="ida启动时提示idapython没有imp模块" tabindex="-1">IDA启动时提示IDApython没有imp模块 <a class="header-anchor" href="#ida启动时提示idapython没有imp模块" aria-label="Permalink to &quot;IDA启动时提示IDApython没有imp模块&quot;">​</a></h3><p>我的<code>python</code>版本是<code>python3.12.0</code></p><p>报错信息如下： <img src="https://onedrive.live.com/embed?resid=FBD44A0636A4242E%212834&amp;authkey=%21ANiKrfTOh3bHFkY&amp;width=689&amp;height=143" width="689" height=" "></p><p>因为<code>imp </code>从 <code>Python 3.4</code> 之后弃用了，所以可以使用 <code>importlib</code> 代替，具体操作如下：</p><p>修改<code>D:\\1Reserve\\IDA_Pro_v8.3\\IDA Pro 8.3 (x86, x86_64)_BGSPA\\IDA Pro 8.3 (x86, x86_64)\\python\\3</code>下的<code>ida_idaapi.py</code>文件。共有三处需要修改的地方</p><p>首先，将第96行的<code>import imp</code>注释掉，增加第97行<code>import importlib</code></p><img src="https://onedrive.live.com/embed?resid=FBD44A0636A4242E%212836&amp;authkey=%21ANiKrfTOh3bHFkY&amp;width=1593&amp;height=575" width="1593" height=" "><p>其次，将<code>IDAPython_LoadProcMod</code>函数修改成下面这个样子</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IDAPython_LoadProcMod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path, g, print_error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    加载处理器模块。</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pname </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;__name__&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;__name__&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;__main__&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    parent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys.modules[pname]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    path_dir, path_fname </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.split(path)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    procmod_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.splitext(path_fname)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    procobj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> None</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    PY_COMPILE_ERR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> None</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        spec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> importlib.util.spec_from_file_location(procmod_name, path)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        procmod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> importlib.util.module_from_spec(spec)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        spec.loader.exec_module(procmod)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parent:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            setattr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent, procmod_name, procmod)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # 从父模块导出属性到处理器模块</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            parent_attrs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> getattr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;__all__&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (attr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> attr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> attr.startswith(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pa </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parent_attrs:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                setattr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(procmod, pa, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getattr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent, pa))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 实例化处理器对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> getattr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(procmod, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;PROCESSOR_ENTRY&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            procobj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> procmod.PROCESSOR_ENTRY()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    except</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Exception</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        PY_COMPILE_ERR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}\\n{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">traceback.format_exc()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> print_error:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PY_COMPILE_ERR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> PY_COMPILE_ERR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, procobj</span></span></code></pre></div><p>最后，将下方的<code>IDAPython_UnLoadProcMod</code>函数修改成下面这个样子</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IDAPython_UnLoadProcMod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(script, g, print_error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    卸载处理器模块。</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pname </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;__name__&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;__name__&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;__main__&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    parent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sys.modules[pname]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    script_fname </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.split(script)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    procmod_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.splitext(script_fname)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 尝试从父模块的属性中移除处理器模块</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hasattr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent, procmod_name):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        delattr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parent, procmod_name)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 尝试从 sys.modules 中移除处理器模块</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        sys.modules.pop(procmod_name, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">None</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    except</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Exception</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Error unloading module </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">procmod_name</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(e)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    PY_COMPILE_ERR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> None</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> PY_COMPILE_ERR</span></span></code></pre></div><p>保存后重新打开<code>ida</code>,发现警告消失，问题解决。</p><p>参考文档:<a href="https://www.52pojie.cn/thread-1862646-1-1.html" target="_blank" rel="noreferrer">IDA 8.3运行报错，如何解决？</a></p>`,27)]))}const g=i(p,[["render",t]]);export{o as __pageData,g as default};
