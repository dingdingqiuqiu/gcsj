import{_ as i,c as l,o as e,ae as t}from"./chunks/framework.ChhGBEr5.js";const k=JSON.parse('{"title":"计网-知识整理","description":"","frontmatter":{"title":"计网-知识整理","mathjax":true,"date":"2024-11-14T21:57:38.000Z","tags":null,"categories":null},"headers":[],"relativePath":"笔记/Old/计网-知识整理.md","filePath":"笔记/Old/计网-知识整理.md","lastUpdated":1743185048000}'),o={name:"笔记/Old/计网-知识整理.md"};function s(h,a,r,p,d,n){return e(),l("div",null,a[0]||(a[0]=[t('<p>本文主要整理计网学习中的相关知识，供复习使用</p><h2 id="生成树算法-stp" tabindex="-1">生成树算法(STP) <a class="header-anchor" href="#生成树算法-stp" aria-label="Permalink to &quot;生成树算法(STP)&quot;">​</a></h2><h3 id="算法步骤" tabindex="-1">算法步骤 <a class="header-anchor" href="#算法步骤" aria-label="Permalink to &quot;算法步骤&quot;">​</a></h3><h4 id="_1-选取根交换机" tabindex="-1">1. 选取根交换机 <a class="header-anchor" href="#_1-选取根交换机" aria-label="Permalink to &quot;1. 选取根交换机&quot;">​</a></h4><p>网桥ID(BID)最小的交换机是根交换机。</p><blockquote><p>交换机前身即为网桥，可理解为多端口网桥</p></blockquote><p>BID分为两部分：优先级和基本Mac地址。</p><blockquote><p>端口有自己Mac地址，但是基本Mac地址为Vlan1的mac地址</p></blockquote><p>优先级和Mac地址的比较均为小的优先。</p><h4 id="_2-选举根端口" tabindex="-1">2. 选举根端口 <a class="header-anchor" href="#_2-选举根端口" aria-label="Permalink to &quot;2. 选举根端口&quot;">​</a></h4><blockquote><p>针对非根交换机而言，作用是接收根交换机的BPDU,也可接收普通流量，每个非根交换机有且仅有一个根端口。</p></blockquote><ol><li>端口到根交换机的路径成本最小</li><li>对端网桥ID小的优先</li><li>对端的端口ID,由两部分组成，优先级和端口号。取值小的优先。</li></ol><h4 id="_3-选举指定端口并阻塞备用端口" tabindex="-1">3. 选举指定端口并阻塞备用端口 <a class="header-anchor" href="#_3-选举指定端口并阻塞备用端口" aria-label="Permalink to &quot;3. 选举指定端口并阻塞备用端口&quot;">​</a></h4><blockquote><p>选取指定端口，在网段上选择，每个网段仅有一个指定端口,剩下的是备用端口，备用端口阻塞，防止成环。</p></blockquote><ol><li><p>根交换机的所有端口均为指定端口。</p></li><li><p>根<strong>端口</strong>的对端端口为指定端口</p></li><li><p>比较端口到根交换机的路径成本最小</p></li><li><p>比较所在交换机的网桥ID(BID)</p></li><li><p>剩余的端口均为备用端口</p></li></ol><h3 id="其他知识" tabindex="-1">其他知识 <a class="header-anchor" href="#其他知识" aria-label="Permalink to &quot;其他知识&quot;">​</a></h3><ol><li>RSTP比STP协议增加了Backup端口。</li><li>HUB算集线器，相当于没设备</li><li>BPDU中无VALN ID参数，包括Port ID,Bridge ID,Root ID。因为选举时无需Vlan ID.</li><li>STP协议Forward Delay时间15秒。hello时间2秒，最大生存时间20秒。hello时间是2秒发一次BPDU,转发时延是各个阶段时延。生存时间是10*hello时间。</li><li>stp root secondary把优先级改到4096,默认是32768。最高优先级是0.使用stp root primary配置</li><li>blocking就是阻塞状态，forwarding状态就是启用状态。</li></ol><p><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy9mYmQ0NGEwNjM2YTQyNDJlL0VWNFRrdGdaNlc1TXNING5kdTFxX0hrQnZySXhsQ3JsMjc0YlE3S2t6a3NVR2c_ZT1XbkNOS0w.jpg" alt="image-20241115155631028" loading="lazy"></p><h2 id="路由支持" tabindex="-1">路由支持 <a class="header-anchor" href="#路由支持" aria-label="Permalink to &quot;路由支持&quot;">​</a></h2><h3 id="ospf协议" tabindex="-1">OSPF协议 <a class="header-anchor" href="#ospf协议" aria-label="Permalink to &quot;OSPF协议&quot;">​</a></h3><blockquote><p>开放最短路径优先协议</p><p>OSPFv2支持IPV4</p><p>OSPFv3执行IPV6</p></blockquote><p><code>display ospf peer</code>可以查看OSPF是否建立起邻居关系。注意参数为<code>peer</code></p><h3 id="选举dr和bdr" tabindex="-1">选举DR和BDR <a class="header-anchor" href="#选举dr和bdr" aria-label="Permalink to &quot;选举DR和BDR&quot;">​</a></h3><blockquote><p>减少发送的分组数</p></blockquote><ol><li>非DR/BDR仅与DR/BDR建立邻居关系full，而非DR/BDR间的邻居关系是2-way。full状态需要交互LSA,即深入了解。</li><li>优先级是0表示不能参加选举</li></ol><h3 id="静态路由配置" tabindex="-1">静态路由配置 <a class="header-anchor" href="#静态路由配置" aria-label="Permalink to &quot;静态路由配置&quot;">​</a></h3><blockquote><p>只有动态路由协议需要路由器间交换控制命令，即协议报文，静态路由不需要。</p></blockquote><p><code>ip route-static</code> 命令用于在网络设备（如路由器或交换机）上静态配置路由。它的基本命令格式如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> route-static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">destination-networ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">subnet-mas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">next-hop-i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [admin-distance]</span></span></code></pre></div><p>参数说明：</p><ul><li><p><code>&lt;destination-network&gt;</code>：目标网络的 IP 地址。</p></li><li><p><code>&lt;subnet-mask&gt;</code>：目标网络的子网掩码。</p></li><li><p><code>&lt;next-hop-ip&gt;</code>：指向目标网络的下一跳 IP 地址，通常是连接目标网络的设备的接口地址。</p></li><li><p><code>[admin-distance]</code>：可选，指定路由的管理距离（优先级）。如果不指定，默认为 1。</p></li><li><p>静态路由优先级默认60，<code>preference</code>可配置浮动路由。数值越小越优先。数值大的可以作为数值小的备用路由.</p></li><li><p>0.0.0.0 0.0.0.0是默认路由，亦可满足需求。</p></li></ul><h3 id="dhcp协议" tabindex="-1">DHCP协议 <a class="header-anchor" href="#dhcp协议" aria-label="Permalink to &quot;DHCP协议&quot;">​</a></h3><blockquote><p>自动获取ip地址</p></blockquote><ol><li>广播发送<code>DHCP DISCOVER</code>，因为不知道DHCP服务器是哪个？</li><li>服务器接收报文并响应，广播发送<code>DHCP OFFER</code>报文，其中有事务IP，与DISCOVER 中的事务IP对比。</li><li>客户端广播发送<code>DHCP REQUEST</code></li><li></li></ol><h3 id="其他知识-1" tabindex="-1">其他知识 <a class="header-anchor" href="#其他知识-1" aria-label="Permalink to &quot;其他知识&quot;">​</a></h3><ol><li>对于到达同一个目的网络的多条路径，先比较不同协议优先级，再比较相同协议开销。</li><li>通过不同路由协议获得的路由，优先级不相同，比如：BGP-255,OSPF-10,Static 60</li><li>不同路由协议定义的度量值不具有可比性。</li></ol><h2 id="网络安全" tabindex="-1">网络安全 <a class="header-anchor" href="#网络安全" aria-label="Permalink to &quot;网络安全&quot;">​</a></h2><h3 id="acl配置" tabindex="-1">ACL配置 <a class="header-anchor" href="#acl配置" aria-label="Permalink to &quot;ACL配置&quot;">​</a></h3><h3 id="aaa认证" tabindex="-1">AAA认证 <a class="header-anchor" href="#aaa认证" aria-label="Permalink to &quot;AAA认证&quot;">​</a></h3>',39)]))}const u=i(o,[["render",s]]);export{k as __pageData,u as default};
