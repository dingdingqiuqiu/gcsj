import{_ as n,c as s,o as t,ae as e}from"./chunks/framework.ChhGBEr5.js";const m=JSON.parse('{"title":"vim-tmux-navigator配置使用","description":"","frontmatter":{"title":"vim-tmux-navigator配置使用","date":"2024-09-16T02:25:31.000Z","tags":"vim,tmux，English","categories":null},"headers":[],"relativePath":"笔记/Old/vim-tmux-navigator配置使用.md","filePath":"笔记/Old/vim-tmux-navigator配置使用.md","lastUpdated":1743186774000}'),i={name:"笔记/Old/vim-tmux-navigator配置使用.md"};function p(o,a,l,u,c,r){return t(),s("div",null,a[0]||(a[0]=[e(`<p>本文主要是对<code>vim-tmux-navigator</code>插件项目主页的汉化，主要为了练习英文能力。</p><p>原文链接： <a href="https://github.com/christoomey/vim-tmux-navigator" target="_blank" rel="noreferrer">vim-tmux-navigator插件github原文</a></p><h1 id="vim-tmux-navigator" tabindex="-1">Vim Tmux Navigator <a class="header-anchor" href="#vim-tmux-navigator" aria-label="Permalink to &quot;Vim Tmux Navigator&quot;">​</a></h1><p>navigator航海家</p><p>This plugin is a repackaging of Mislav Marohnić&#39;s tmux-navigator configuration described in this gist. When combined with a set of tmux key bindings, the plugin will allow you to navigate seamlessly between vim and tmux splits using a consistent set of hotkeys.</p><p>combined 联合 a set of 一组 bindings 绑定 seam接缝 seamless无缝的 consistent 一致的</p><p>NOTE: This requires tmux v1.8 or higher.</p><p>注意:这个插件需要tmux版本在v1.8以上</p><h3 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h3><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><h3 id="vim" tabindex="-1">Vim <a class="header-anchor" href="#vim" aria-label="Permalink to &quot;Vim&quot;">​</a></h3><p>If you don&#39;t have a preferred installation method, I recommend using Vundle. Assuming you have Vundle installed and configured, the following steps will install the plugin: 如果你没有一个特别偏爱的安装方式，我推荐你使用Vundle。假定你已经安装了Vundle并且已经配置好了，下面这些步骤可以安装这个插件</p><p>Add the following line to your ~/.vimrc file</p><p>添加下面这些行到你的vimrc文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Plugin &#39;christoomey/vim-tmux-navigator&#39;</span></span></code></pre></div><p>然后运行</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>PluginInstall</span></span></code></pre></div><p>If you are using Vim 8+, you don&#39;t need any plugin manager. Simply clone this repository inside ~/.vim/pack/plugin/start/ directory and restart Vim. 如果你使用Vim8＋，你不需要任何插件管理器.只需要克隆这个仓库到<code>~/.vim/pack/plugin/start</code>目录然后重启Vim即可</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git clone git@github.com:christoomey/vim-tmux-navigator.git ~/.vim/pack/plugins/start/vim-tmux-navigator</span></span></code></pre></div><h3 id="lazy-nvim" tabindex="-1">Lazy.nvim <a class="header-anchor" href="#lazy-nvim" aria-label="Permalink to &quot;Lazy.nvim&quot;">​</a></h3><p>If you are using lazy.nvim. Add the following plugin to your configuration. 如果你使用lazy.nvim.添加下面的插件到你的配置中</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;christoomey/vim-tmux-navigator&quot;,</span></span>
<span class="line"><span>  cmd = {</span></span>
<span class="line"><span>    &quot;TmuxNavigateLeft&quot;,</span></span>
<span class="line"><span>    &quot;TmuxNavigateDown&quot;,</span></span>
<span class="line"><span>    &quot;TmuxNavigateUp&quot;,</span></span>
<span class="line"><span>    &quot;TmuxNavigateRight&quot;,</span></span>
<span class="line"><span>    &quot;TmuxNavigatePrevious&quot;,</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  keys = {</span></span>
<span class="line"><span>    { &quot;&lt;c-h&gt;&quot;, &quot;&lt;cmd&gt;&lt;C-U&gt;TmuxNavigateLeft&lt;cr&gt;&quot; },</span></span>
<span class="line"><span>    { &quot;&lt;c-j&gt;&quot;, &quot;&lt;cmd&gt;&lt;C-U&gt;TmuxNavigateDown&lt;cr&gt;&quot; },</span></span>
<span class="line"><span>    { &quot;&lt;c-k&gt;&quot;, &quot;&lt;cmd&gt;&lt;C-U&gt;TmuxNavigateUp&lt;cr&gt;&quot; },</span></span>
<span class="line"><span>    { &quot;&lt;c-l&gt;&quot;, &quot;&lt;cmd&gt;&lt;C-U&gt;TmuxNavigateRight&lt;cr&gt;&quot; },</span></span>
<span class="line"><span>    { &quot;&lt;c-\\\\&gt;&quot;, &quot;&lt;cmd&gt;&lt;C-U&gt;TmuxNavigatePrevious&lt;cr&gt;&quot; },</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>Then, restart Neovim and lazy.nvim will automatically install the plugin and configure the keybindings. 然后，重启Neovim，lazy.nvim会自动安装这个插件并且配置键位绑定</p><h2 id="tmux" tabindex="-1">tmux <a class="header-anchor" href="#tmux" aria-label="Permalink to &quot;tmux&quot;">​</a></h2><p>To configure the tmux side of this customization there are two options:</p><p>customization 定制</p><p>配置该定制的tmux端有两个选择:</p><h3 id="add-a-snippet" tabindex="-1">Add a snippet <a class="header-anchor" href="#add-a-snippet" aria-label="Permalink to &quot;Add a snippet&quot;">​</a></h3><p>snippet 片段</p><p>Add the following to your ~/.tmux.conf file: 添加下面这些到你的<code>~/.tmux.conf</code>文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Smart pane switching with awareness of Vim splits.</span></span>
<span class="line"><span># See: https://github.com/christoomey/vim-tmux-navigator</span></span>
<span class="line"><span>is_vim=&quot;ps -o state= -o comm= -t &#39;#{pane_tty}&#39; \\</span></span>
<span class="line"><span>    | grep -iqE &#39;^[^TXZ ]+ +(\\\\S+\\\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$&#39;&quot;</span></span>
<span class="line"><span>bind-key -n &#39;C-h&#39; if-shell &quot;$is_vim&quot; &#39;send-keys C-h&#39;  &#39;select-pane -L&#39;</span></span>
<span class="line"><span>bind-key -n &#39;C-j&#39; if-shell &quot;$is_vim&quot; &#39;send-keys C-j&#39;  &#39;select-pane -D&#39;</span></span>
<span class="line"><span>bind-key -n &#39;C-k&#39; if-shell &quot;$is_vim&quot; &#39;send-keys C-k&#39;  &#39;select-pane -U&#39;</span></span>
<span class="line"><span>bind-key -n &#39;C-l&#39; if-shell &quot;$is_vim&quot; &#39;send-keys C-l&#39;  &#39;select-pane -R&#39;</span></span>
<span class="line"><span>tmux_version=&#39;$(tmux -V | sed -En &quot;s/^tmux ([0-9]+(.[0-9]+)?).*/\\1/p&quot;)&#39;</span></span>
<span class="line"><span>if-shell -b &#39;[ &quot;$(echo &quot;$tmux_version &lt; 3.0&quot; | bc)&quot; = 1 ]&#39; \\</span></span>
<span class="line"><span>    &quot;bind-key -n &#39;C-\\\\&#39; if-shell \\&quot;$is_vim\\&quot; &#39;send-keys C-\\\\&#39;  &#39;select-pane -l&#39;&quot;</span></span>
<span class="line"><span>if-shell -b &#39;[ &quot;$(echo &quot;$tmux_version &gt;= 3.0&quot; | bc)&quot; = 1 ]&#39; \\</span></span>
<span class="line"><span>    &quot;bind-key -n &#39;C-\\\\&#39; if-shell \\&quot;$is_vim\\&quot; &#39;send-keys C-\\\\\\\\&#39;  &#39;select-pane -l&#39;&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>bind-key -T copy-mode-vi &#39;C-h&#39; select-pane -L</span></span>
<span class="line"><span>bind-key -T copy-mode-vi &#39;C-j&#39; select-pane -D</span></span>
<span class="line"><span>bind-key -T copy-mode-vi &#39;C-k&#39; select-pane -U</span></span>
<span class="line"><span>bind-key -T copy-mode-vi &#39;C-l&#39; select-pane -R</span></span>
<span class="line"><span>bind-key -T copy-mode-vi &#39;C-\\&#39; select-pane -l</span></span></code></pre></div><h3 id="tpm" tabindex="-1">TPM <a class="header-anchor" href="#tpm" aria-label="Permalink to &quot;TPM&quot;">​</a></h3><blockquote><p>感觉不如第一种直接在<code>~/.tmux.config</code>里添加</p></blockquote><p>If you prefer, you can use the Tmux Plugin Manager (TPM) instead of copying the snippet. When using TPM, add the following lines to your ~/.tmux.conf: 如果你更喜欢，你可以使用Tmux插件管理器（TPM）代替复制这个片段。当你使用TPM时，添加下面这几行到你的<code>~/.tmux.conf</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>set -g @plugin &#39;christoomey/vim-tmux-navigator&#39;</span></span></code></pre></div><p>To set a different key-binding, use the plugin configuration settings (remember to update your vim config accordingly). Multiple key bindings are possible, use a space to separate.</p><p>为了设置不同的键位绑定，使用插件的配置设置（因此记得更新你的vim配置)。使用空格分割可以实现多个键位绑定。</p><p>不要忘记运行<code>tmp</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>run &#39;~/.tmux/plugins/tpm/tpm&#39;</span></span></code></pre></div><p>Thanks to Christopher Sexton who provided the updated tmux configuration in <a href="http://www.codeography.com/2013/06/19/navigating-vim-and-tmux-splits" target="_blank" rel="noreferrer">this blog post</a>.</p><p>感谢Christopher Sexton在<a href="http://www.codeography.com/2013/06/19/navigating-vim-and-tmux-splits" target="_blank" rel="noreferrer">这篇博客</a>里提供的更新过的tmux配置。</p><p><strong>翻译至此，已经足够形成个人完整配置</strong></p><p><strong>如果想定制键位，看原文的Configuration部分</strong></p>`,43)]))}const g=n(i,[["render",p]]);export{m as __pageData,g as default};
